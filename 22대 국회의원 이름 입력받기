import requests
import urllib.parse
from transformers import pipeline
import re
import html

#  감정 분석 초기화
sentiment_pipeline = pipeline("sentiment-analysis", model="nlptown/bert-base-multilingual-uncased-sentiment")

# 네이버 API 인증 정보
client_id = "ppH1uMGA4_jWdMzMYMH4"
client_secret = "j5wtomptl2"

# 국회의원 이름 목록
members_of_parliament = {
    "강경숙", "강대식", "강득구", "강명구", "강민국", "강선영", "강선우", "강승규", "강유정", "강준현", "강훈식", "고동진", "고민정", "곽규택", "곽상언", "구자근", "권성동", "권영세", "권영진", "권칠승", "권향엽", "김건", "김교흥", "김기웅", "김기표", "김기현", "김남근", "김남희", "김대식", "김도읍", "김동아", "김문수", "김미애", "김민석", "김민전", "김병기", "김병주", "김상욱", "김상훈", "김석기", "김선교", "김선민", "김성원", "김성환", "김성회", "김소희", "김승수", "김승원", "김영배", "김영진", "김영호", "김영환", "김예지", "김용만", "김용민", "김용태", "김우영", "김원이", "김위상", "김윤", "김윤덕", "김은혜", "김장겸", "김재섭", "김재원", "김정재", "김정호", "김종민", "김종양", "김주영", "김준혁", "김준형", "김태년", "김태선", "김태호", "김한규", "김현", "김현정", "김형동", "김희정", "나경원", "남인순", "노종면", "맹성규", "모경종", "문금주", "문대림", "문정복", "문진석", "민병덕", "민형배", "민홍철", "박균택", "박대출", "박덕흠", "박민규", "박범계", "박상웅", "박상혁", "박선원", "박성민", "박성준", "박성훈", "박수민", "박수영", "박수현", "박용갑", "박은정", "박정", "박정하", "박정현", "박정훈", "박주민", "박준태", "박지원", "박지혜", "박찬대", "박충권", "박해철", "박형수", "박홍근", "박홍배", "박희승", "배준영", "배현진", "백선희", "백승아", "백종헌", "백혜련", "복기왕", "부승찬", "서명옥", "서미화", "서범수", "서삼석", "서영교", "서영석", "서왕진", "서일준", "서지영", "서천호", "성일종", "소병훈", "손명수", "송기헌", "송석준", "송언석", "송옥주", "송재봉", "신동욱", "신성범", "신영대", "신장식", "신정훈", "안규백", "안도걸", "안상훈", "안철수", "안태준", "안호영", "양문석", "양부남", "어기구", "엄태영", "염태영", "오기형", "오세희", "용혜인", "우원식", "우재준", "위성곤", "위성락", "유동수", "유상범", "유영하", "유용원", "윤건영", "윤상현", "윤영석", "윤재옥", "윤종군", "윤종오", "윤준병", "윤한홍", "윤호중", "윤후덕", "이강일", "이개호", "이건태", "이광희", "이기헌", "이달희", "이만희", "이병진", "이상식", "이상휘", "이성권", "이성윤", "이소영", "이수진", "이양수", "이언주", "이연희", "이용선", "이용우", "이원택", "이인선", "이인영", "이재강", "이재관", "이재명", "이재정", "이정문", "이정헌", "이종배", "이종욱", "이주영", "이준석", "이철규", "이춘석", "이학영", "이해민", "이해식", "이헌승", "이훈기", "인요한", "임광현", "임미애", "임오경", "임이자", "임종득", "임호선", "장경태", "장동혁", "장종태", "장철민", "전용기", "전재수", "전종덕", "전진숙", "전현희", "정동만", "정동영", "정성국", "정성호", "정연욱", "정을호", "정일영", "정점식", "정준호", "정진욱", "정청래", "정춘생", "정태호", "정혜경", "정희용", "조경태", "조계원", "조배숙", "조승래", "조승환", "조은희", "조인철", "조정식", "조정훈", "조지연", "주진우", "주철현", "주호영", "진선미", "진성준", "진종오", "차규근", "차지호", "채현일", "천준호", "천하람", "최기상", "최민희", "최보윤", "최수진", "최은석", "최형두", "추경호", "추미애", "한기호", "한민수", "한병도", "한정애", "한준호", "한지아", "한창민", "허성무", "허영", "허종식", "홍기원", "황명선", "황운하", "황정아", "황희",



}

#  텍스트 정리
def clean_text(text):
    text = re.sub(r"<[^>]+>", "", text)
    return html.unescape(text)

#  뉴스 + 감정 분석
def analyze_politician(name):
    query = urllib.parse.quote(name)
    url = f"https://openapi.naver.com/v1/search/news.json?query={query}&display=3&sort=date"
    headers = {
        "X-Naver-Client-Id": client_id,
        "X-Naver-Client-Secret": client_secret
    }

    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        result = response.json()
        print(f"\n [{name}] 관련 뉴스:")
        for item in result["items"]:
            title = clean_text(item["title"])
            description = clean_text(item["description"])
            text = (title + " " + description)[:512]
            sentiment = sentiment_pipeline(text)[0]
            print(f"\n 제목: {title}")
            print(f" 요약: {description}")
            print(f" 감정: {sentiment['label']} (신뢰도: {sentiment['score']:.2f})")
    else:
        print(f" 뉴스 요청 실패: {response.status_code}")

#  사용자 입력 루프
while True:
    name = input("\n국회의원 이름을 입력하세요 (종료하려면 'exit'): ")
    if name.lower() == "exit":
        print("프로그램 종료.")
        break

    elif name not in members_of_parliament:
        print(f"'{name}'은(는) 국회의원 명단에 없습니다.")
    else:
        analyze_politician(name)
'''박서진'''
